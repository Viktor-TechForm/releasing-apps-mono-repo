name: release-please

on:
  push:
    branches:
      - main

jobs:
  release-please:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-22.04
    outputs:
      releaseName: ${{ steps.get-project-name.outputs.result && fromJson(steps.get-project-name.outputs.result).releaseName }}
      releaseVersion: ${{ steps.get-project-name.outputs.result && fromJson(steps.get-project-name.outputs.result).releaseVersion }}
      releaseBuildNumber: ${{ steps.get-project-name.outputs.result && fromJson(steps.get-project-name.outputs.result).releaseBuildNumber }}
      releaseCreated: ${{ steps.release.outputs.releases_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3.7.4
        id: release
        with:
          command: manifest

      - name: Get released project
        if: ${{ steps.release.outputs.releases_created }}
        id: get-project-name
        uses: actions/github-script@v6.4.0
        env:
          RELEASE_OUTPUTS: ${{ toJson(steps.release.outputs) }}
        with:
          script: |
            try {
              const releaseOutputs = JSON.parse(process.env['RELEASE_OUTPUTS']);
              const paths_released = JSON.parse(releaseOutputs.paths_released);
              if (!Array.isArray(paths_released) || paths_released.length !== 1)
                throw new Error('expected paths_released to be an array an of length 1');
              let releaseNameAndVersion;
              for (const [key, value] of Object.entries(releaseOutputs)) {
                if (key.endsWith('--name')) {
                  if (!releaseNameAndVersion) {
                    releaseNameAndVersion = value;
                  } else {
                    throw new Error('Multiple keys ending with --name found');
                  }
                }
              }
              if (!releaseNameAndVersion) throw new Error('No release name found');
              // the value should look like e.g.: odensenoeglen-backend: v1.0.0
              const releaseNameArray = releaseNameAndVersion.split(': v');
              console.log({ releaseNameArray });
              if (releaseNameArray.length !== 2 || releaseNameArray[0].length < 1) {
                throw new Error('Unexpected release name format');
              }
              const [releaseName, releaseVersion] = releaseNameArray;
              return {
                releaseName,
                releaseVersion,
                releaseBuildNumber: releaseVersion.split('.')
                                      .map((value, index) => {
                                        if (index === 0) return value;
                                        return value.padStart(3, '0');
                                      })
                                      .join('')
              };
            } catch (error) {
              core.setFailed(`Failed to get project name: ${error}`);
            }

      - name: Print release name
        if: ${{ steps.release.outputs.releases_created }}
        env:
          RELEASE_NAME: ${{ steps.get-project-name.outputs.result && fromJson(steps.get-project-name.outputs.result).releaseName }}
          VERSION: ${{ steps.get-project-name.outputs.result && fromJson(steps.get-project-name.outputs.result).releaseVersion }}
          BUILD_NUMBER: ${{ steps.get-project-name.outputs.result && fromJson(steps.get-project-name.outputs.result).releaseBuildNumber }}
        run: echo "name $RELEASE_NAME , version $VERSION , buildNumber $BUILD_NUMBER"

  release-dev:
    if: ${{ !needs.release-please.outputs.releaseCreated }}
    needs: release-please
    runs-on: ubuntu-22.04
    env:
      TECHFORM_NPM_AUTH_TOKEN: ${{ secrets.NPM_GITHUB_REGISTRY_AUTH_TOKEN }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0 # nx needs the full history

      # set base and head sha's for nx affected commands
      - uses: nrwl/nx-set-shas@v3.0.2
        id: set-shas

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.27.1

      - name: Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install deps
        run: pnpm i --frozen-lockfile

      - name: Generate config
        env:
          LATEST_RELEASE_SHA: ${{ steps.set-shas.outputs.base }}
        run: pnpm turbo run generateConfig --filter=\[$LATEST_RELEASE_SHA\] -- dev

      - name: Release affected
        env:
          LATEST_RELEASE_SHA: ${{ steps.set-shas.outputs.base }}
        run: pnpm turbo run release --filter=\[$LATEST_RELEASE_SHA\]

  release-odensenoeglen:
    if: ${{ startsWith( needs.release-please.outputs.releaseName, 'odensenoeglen' )}}
    needs: release-please
    uses: ./.github/workflows/release-my-project.yml
    with:
      releaseName: ${{ needs.release-please.outputs.releaseName }}
      releaseVersion: ${{ needs.release-please.outputs.releaseVersion }}
      releaseBuildNumber: ${{ needs.release-please.outputs.releaseBuildNumber }}
